#import(nl.lumc.sasc.biopet.utils.summary.Summary)
#import(nl.lumc.sasc.biopet.core.report.ReportPage)
#import(nl.lumc.sasc.biopet.pipelines.bammetrics.BammetricsReport)
#import(java.io.File)
<%@ var summary: Summary %>
<%@ var sampleId: Option[String] = None %>
<%@ var libId: Option[String] = None %>
<%@ var sampleLevel: Boolean = true %>
<%@ var rootPath: String %>
<%@ var outputDir: File %>
#{
    val variantCallers = summary.getValue(sampleId, libId, "shivavariantcalling", "settings", "variantcallers").get.asInstanceOf[List[String]]
}#

<div class="panel-body">
<!-- Table -->
<table class="table">
    <thead><tr>
        <th>Variantcaller</th>
        <th>Path</th>
        <th>MD5</th>
    </tr></thead>
    <tbody>
        #if (variantCallers.size > 1)
            <tr>
                <td>Final (merged)</td>
                <td>${ShivaReport.formatVcfFilePath(summary.getValue(sampleId, libId, "shivavariantcalling", "files", "pipeline", "final", "path"))}</td>
                <td>${summary.getValue(sampleId, libId, "shivavariantcalling", "files", "pipeline", "final", "md5")}</td>
            </tr>
        #end
        #for (variantCaller <- variantCallers)
            <tr>
                <td>${variantCaller}</td>
                <td>${ShivaReport.formatVcfFilePath(summary.getValue(sampleId, libId, "shivavariantcalling", "files", "pipeline", variantCaller, "path"))}</td>
                <td>${ShivaReport.formatVcfFilePath(summary.getValue(sampleId, libId, "shivavariantcalling", "files", "pipeline", variantCaller, "md5"))}</td>
            </tr>
        #end
    </tbody>
</table>

</div>
