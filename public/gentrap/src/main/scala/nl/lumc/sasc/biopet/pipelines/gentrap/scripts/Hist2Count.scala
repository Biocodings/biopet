/**
 * Biopet is built on top of GATK Queue for building bioinformatic
 * pipelines. It is mainly intended to support LUMC SHARK cluster which is running
 * SGE. But other types of HPC that are supported by GATK Queue (such as PBS)
 * should also be able to execute Biopet tools and pipelines.
 *
 * Copyright 2014 Sequencing Analysis Support Core - Leiden University Medical Center
 *
 * Contact us at: sasc@lumc.nl
 *
 * A dual licensing mode is applied. The source code within this project that are
 * not part of GATK Queue is freely available for non-commercial use under an AGPL
 * license; For commercial users or users who do not want to follow the AGPL
 * license, please contact us to obtain a separate license.
 */
package nl.lumc.sasc.biopet.pipelines.gentrap.scripts

import java.io.File

import nl.lumc.sasc.biopet.utils.config.Configurable
import nl.lumc.sasc.biopet.core.extensions.PythonCommandLineFunction
import org.broadinstitute.gatk.utils.commandline.{ Input, Output }

/**
 * Wrapper for the hist2count.py script, used internally in Gentrap
 */
class Hist2Count(val root: Configurable) extends PythonCommandLineFunction {

  setPythonScript("hist2count.py")

  @Input(doc = "Input histogram file (generated by bedtools coverage -hist)", required = true)
  var input: File = null

  @Output(doc = "Output count file", required = false)
  var outputGeneLevelCount: File = null

  /** index of column to copy to output file from input file */
  var copyColumn: List[Int] = List.empty[Int]

  def cmdLine = {
    getPythonCommand +
      required("-i", input) +
      required("-o", outputGeneLevelCount) +
      optional("-c", repeat(copyColumn), escape = false)
  }
}
