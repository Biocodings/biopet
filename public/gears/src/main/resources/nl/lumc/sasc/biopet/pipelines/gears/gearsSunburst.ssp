#import(nl.lumc.sasc.biopet.utils.summary.Summary)
#import(nl.lumc.sasc.biopet.utils.ConfigUtils)
#import(java.io.File)
<%@ var summary: Summary %>
<%@ var sampleId: Option[String] = None %>
<%@ var libId: Option[String] = None %>
<%@ var rootPath: String %>
<%@ var showPlot: Boolean = true %>
<%@ var showIntro: Boolean = true %>
#{
    val samples = sampleId match {
        case Some(sample) => List(sample.toString)
        case _ => summary.samples.toList
    }
    val librariesCount = summary.samples.foldLeft(0)(_ + summary.libraries(_).size)
}#

#if (showIntro)

    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            Here we show a sunburst visualisation of the analysis of the metagenome in sample: ${sampleId}
        </div>
        <div class="col-md-1"></div>
    </div>
#end



#if (showPlot)
<div class="row">
    <div class="col-md-12">
    <h3 id='currentlevel'>Root</h3>
    <div>
        <span id="selection_name"></span> -
        <span id="selection_size"></span> -
        <span id="selection_value"></span>
    </div>

    <form>
        <label><input type="radio" name="mode" value="size"> Size</label>
        <label><input type="radio" name="mode" value="count" checked> Count</label>
    </form>
    <div id="sequence"></div>

    <div id="datatable"></div>
    <div id="svgholder"></div>

    </div>

    <script src="${rootPath}ext/js/gears.js"></script>

    <script type="application/ecmascript">

    #{
        val rawreport = Map("kraken" -> summary.getValue(sampleId, libId, "gears", "stats", "krakenreport"))
        val jsonReport = ConfigUtils.mapToJson(rawreport)
    }#

        var krakenresult = ${unescape(jsonReport)};
        loadGears(krakenresult.kraken.classified);
    </script>


</div>
#end
