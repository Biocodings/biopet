package nl.lumc.sasc.biopet.core

import java.io.File

import htsjdk.samtools.reference.IndexedFastaSequenceFile
import nl.lumc.sasc.biopet.core.config.Configurable
import scala.collection.JavaConversions._

/**
 * Created by pjvan_thof on 4/6/15.
 */
trait Reference extends Configurable {

  var referenceSpecies: String = {
    root match {
      case r: Reference => r.referenceSpecies
      case _            => config("species", default = "unknown_species")
    }
  }

  var referenceName: String = {
    root match {
      case r: Reference => r.referenceName
      case _            => config("referenceName", default = "unknown_ref")
    }
  }

  def referenceFasta(): File = {
    val file: File = config("referenceFasta", path = List("genomes", referenceSpecies, referenceName))
    Reference.checkFasta(file)
    file
  }

  def referenceSummary: Map[String, Any] = {
    val file = new IndexedFastaSequenceFile(referenceFasta())
    Map(referenceSpecies ->
      Map(referenceName ->
        (for (seq <- file.getSequenceDictionary.getSequences) yield seq.getSequenceName -> {
          val md5 = Option(seq.getAttribute("M5"))
          Map("md5" -> md5, "length" -> seq.getSequenceLength)
        }).toMap
      )
    )
  }
}

object Reference {

  /** Used as cache to avoid double checking */
  private var checked: Set[File] = Set()

  //TODO: this become obsolete when index get autogenerated

  /** Check fasta file if file exist and index file are there */
  def checkFasta(file: File): Unit = {
    if (!checked.contains(file)) {
      require(file.exists(), "Reference not found: " + file)

      val dict = new File(file.getAbsolutePath.stripSuffix(".fa").stripSuffix(".fasta") + ".dict")
      require(dict.exists(), "Reference is missing a dict file")

      val fai = new File(file.getAbsolutePath + ".fai")
      require(fai.exists(), "Reference is missing a fai file")

      require(IndexedFastaSequenceFile.canCreateIndexedFastaReader(file), "Index of reference cannot be loaded, reference: " + file)

      checked += file
    }
  }
}
