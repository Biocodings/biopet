#import(nl.lumc.sasc.biopet.core.summary.Summary)
#import(nl.lumc.sasc.biopet.core.report.ReportPage)
<%@ var summary: Summary %>
<%@ var indexPage: ReportPage %>
<%@ var reportName: String %>
<%@ var page: ReportPage %>
<%@ var path: List[String] %>
<%@ var args: Map[String, Any] %>
<%@ var rootPath: String %>
#{
    def createMenu(page: ReportPage, path: List[String] = Nil, first: Boolean = true): String = {
        val buffer: StringBuffer = new StringBuffer()

        if (page.subPages.nonEmpty){
            buffer.append("<ul class=\"dropdown-menu\">")
        }

        for (subPage <- page.subPages) {
            val href: String = {
                if (path.isEmpty) rootPath + subPage._1 + "/index.html"
                else rootPath + path.mkString("","/","/") + subPage._1 + "/index.html"
            }

            buffer.append("<li")
            if(subPage._2.subPages.nonEmpty) buffer.append(" class=\"dropdown-submenu\"")
            buffer.append("><a href=\"" + href + "\"")
            if (first) buffer.append(" tabindex=\"-1\"")
            buffer.append(">" + subPage._1 + "</a>")
            buffer.append(createMenu(subPage._2, path ::: subPage._1 :: Nil, first = false))
            buffer.append("</li>")
        }
        if(page.subPages.nonEmpty) {
            buffer.append("</ul>\n")
        }
        buffer.toString
    }

    def getSubPage(path:List[String]): ReportPage = {
        path.foldLeft(indexPage)((c, p) => {
            val foundPages = c.subPages.filter(_._1 == p)
            require(foundPages.size == 1, "Name of page not found or duplicate is found, page:: " + p + " in path: " + path)
            foundPages.head._2
        })
    }
}#
<!DOCTYPE html>
<html>
    <head>
        <title>${reportName}</title>

        <!-- Bootstrap core JavaScript
        ================================================== -->
        <!-- Placed at the end of the document so the pages load faster -->
        <script src="${rootPath}ext/js/jquery.min.js"></script>

        <!-- Latest compiled and minified CSS -->
        <link rel="stylesheet" href="${rootPath}ext/css/bootstrap.min.css">

        <!-- Optional theme -->
        <link rel="stylesheet" href="${rootPath}ext/css/bootstrap-theme.min.css">

        <!-- Latest compiled and minified JavaScript -->
        <script src="${rootPath}ext/js/bootstrap.min.js"></script>

        <link rel="stylesheet" type="text/css" href="${rootPath}ext/css/bootstrap_dashboard.css">
        <link rel="stylesheet" type="text/css" href="${rootPath}ext/css/sortable-theme-bootstrap.css">

        <!-- sortable tables //-->
        <script src="${rootPath}ext/js/sortable.min.js"></script>
        <script language="JavaScript">
            <!--
            $(document).ready(function() {
            Sortable.init()

            });
            //-->
        </script>
    </head>
<body>

<nav class="navbar navbar-inverse navbar-fixed-top">
<div class="container">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>

        <ul class="nav navbar-nav">
            <li class="root #if (path.isEmpty) active #end">
                <a class="navbar-brand" href="${rootPath}index.html">${reportName}
                    #if (indexPage.subPages.nonEmpty) <b class="caret"></b> #end
                </a>
                ${unescape(createMenu(indexPage))}
            </li>
        </ul>
    </div>

    <div class="collapse navbar-collapse navbar-ex1-collapse">
        <ul class="nav navbar-nav">
            <!-- ${path.size} //-->
            <!-- ${path} //-->
            #for (t <- 1 to path.size)
                #if(t == 0)
                    <li class="root">
                        <a href="${rootPath}index.html">Home
                            #if (indexPage.subPages.nonEmpty) <b class="caret"></b> #end
                        </a>
                        ${unescape(createMenu(indexPage))}
                    </li>
                #else
                    <li class="root #if (t == path.size) active #end">
                        <a href="${rootPath}${path.slice(0,t).mkString("", "/", "/")}index.html">${path( t - 1 )}
                            #if (getSubPage(path.slice(0, t)).subPages.nonEmpty) <b class="caret"></b> #end
                        </a>
                        ${unescape(createMenu(getSubPage(path.slice(0, t)), path.slice(0, t)))}
                    </li>
                #end
            #end

        </ul>
    </div>
    <!--/.nav-collapse -->
</div>
</nav>

<div class="container-fluid">
<div class="row">
    <div id="side-nav" class="col-sm-3 col-md-2 sidebar">
        <ul class="nav nav-sidebar nav-list">
            #for ((name, url) <- page.sections)
                <li><a href="#${name}">${name}</a></li>
            #end
        </ul>
    </div>
    <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main content">
        #for ((name, section) <- page.sections)
            <div id="${name}" class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title" id="panel-title">
                        ${name}
                    </h3>
                </div>
            ${unescape(section.render(args))}
            </div>
        #end
    </div>
</div>
</div>

</body>
</html>