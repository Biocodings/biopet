#import(nl.lumc.sasc.biopet.utils.summary.Summary)
#import(nl.lumc.sasc.biopet.core.report.ReportPage)
#import(nl.lumc.sasc.biopet.pipelines.flexiprep.FlexiprepReport)
#import(java.io.File)
<%@ var summary: Summary %>
<%@ var sampleId: Option[String] = None %>
<%@ var libId: Option[String] = None %>
<%@ var rootPath: String %>
<%@ var outputDir: File %>
<%@ var showPlot: Boolean = false %>
<%@ var showTable: Boolean = true %>
#{
    val samples = sampleId match {
        case Some(sample) => List(sample.toString)
        case _ => summary.samples.toList
    }
    val pipelineOutputDir = summary.getValue("meta", "output_dir").getOrElse("").toString
    def removeDir(value: Option[Any]): Option[Any] = {
        value.collect { case a =>
            if (a.toString.startsWith(pipelineOutputDir) && pipelineOutputDir.nonEmpty) "./" + a.toString.stripPrefix(pipelineOutputDir + File.separator)
            else a
        }
    }
}#

<table class="table">

<thead><tr>
    <th>Sample</th>
    <th colspan="2">Library</th>
    <th>Path</th>
    <th>MD5</th>
</tr></thead>
<tbody>
    #for (sample <- samples.toList.sorted)
        #{
            val libs = libId match {
            case Some(libId) => List(libId.toString).sorted
            case _ => summary.libraries(sample).toList.sorted
            }

            val sampleRowspan = {
            libs.size +
            libs.count(summary.getLibraryValue(sample, _, "flexiprep", "settings", "paired").getOrElse(false) == true)
            }
        }#
        <tr><td rowspan="${sampleRowspan}"><a href="${rootPath}Samples/${sample}/index.html">${sample}</a></td>
        #for (libId <- libs)
            #if (libs.head != libId) <tr> #end
                #{ val paired = summary.getLibraryValue(sample, libId, "flexiprep", "settings", "paired").getOrElse(false) }#
                <td #if (paired == true) rowspan="2" #end><a href="${rootPath}Samples/${sample}/Libraries/${libId}/index.html">${libId}</a></td>
                #{ val reads = if (paired == true) List("R1", "R2") else List("R1") }#
                #for (read <- reads)
                    #if (read == "R2") </tr><tr> #end
                    <td>${read}</td>
                    <td>${removeDir(summary.getLibraryValue(sample, libId, "flexiprep", "files", "pipeline", "input_" + read, "path"))}</td>
                    <td>${summary.getLibraryValue(sample, libId, "flexiprep", "files", "pipeline", "input_" + read, "md5")}</td>
                #end
            </tr>
        #end
    #end
</tbody>
</table>